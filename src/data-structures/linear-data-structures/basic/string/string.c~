
#include <stdio.h>

#define MAX_STRING_SIZE 100

typedef struct {
    char data[MAX_STRING_SIZE];
    int length;
} String;

void createString(String* string, char* data) {
    int i = 0;
    while(data[i] != '\0' && i < MAX_STRING_SIZE - 1) {
        string->data[i] = data[i];
        i++;
    }
    string->data[i] = '\0';
    string->length = i;
}

void printString(String* string) {
    printf("%s\n", string->data);
}

int getLength(String* string) {
    return string->length;
}

void concatenate(String* string1, String* string2) {
    int i = string1->length;
    int j = 0;
    while(string2->data[j] != '\0' && i < MAX_STRING_SIZE - 1) {
        string1->data[i] = string2->data[j];
        i++;
        j++;
    }
    string1->data[i] = '\0';
    string1->length = i;
}

int compare(String* string1, String* string2) {
    int i = 0;
    while (string1->data[i] == string2->data[i]) {
        if (string1->data[i] == '\0' || string2->data[i] == '\0')
            break;
        i++;
    }
    return string1->data[i] - string2->data[i];
}

void search(String* string1, char target) {
    for(int i = 0; i < string1->length; i++) {
        if(string1->data[i] == target) {
            printf("Character '%c' found at index %d\n", target, i);
            return;
        }
    }
    printf("Character '%c' not found\n", target);
}

int main() {
    String string1, string2;
    createString(&string1, "Hello ");
    createString(&string2, "World!");
    printString(&string1);
    printString(&string2);
    printf("Length of string1: %d\n", getLength(&string1));
    printf("Length of string2: %d\n", getLength(&string2));
    concatenate(&string1, &string2);
    printString(&string1);
    printf("Length of string1 after concatenation: %d\n", getLength(&string1));
    printf("Comparison of string1 and string2: %d\n", compare(&string1, &string2));
    search(&string1, 'W');
    return 0;
}
